@use '../variables' as *;
.btn-outline-sm,
.btn-primary-outline-sm,
.btn-secondary-outline-sm,
.btn-success-outline-sm,
.btn-warning-outline-sm,
.btn-error-outline-sm,
.btn-outline,
.btn-primary-outline,
.btn-secondary-outline,
.btn-success-outline,
.btn-warning-outline,
.btn-error-outline {
    height: max-content;
    padding: size(2) size(8);
    border-radius: size(2);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
    font-weight: var(--fw-semibold);
    width: max-content;

    &:hover {
        transition: all 0.2s;
        transform: scale(calc((100 - 4) / 100));
    }
    &[disabled] {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
    }
}
.btn-outline-sm,
.btn-primary-outline-sm,
.btn-secondary-outline-sm,
.btn-success-outline-sm,
.btn-warning-outline-sm,
.btn-error-outline-sm {
    padding: size(1) size(2);
}

.btn-outline {
    color: on-surface(2);
    background-color: transparent;
    box-shadow: 0 0 size(0) 0 on-surface(1);
    border: solid 2px on-surface(1);
    &:hover {
        box-shadow: 0 0 size(0) on-surface(1);
        background-color: on-surface(1);
        color: surface(0);
    }
}
$colors: 'primary', 'secondary', 'success', 'warning', 'error';
@each $btn-shade in $colors {
    .btn-#{$btn-shade}-outline,
    .btn-#{$btn-shade}-outline-sm {
        background-color: transparent;
        color: hsl(var(--clr-#{$btn-shade}-5));
        box-shadow: 0 0 size(0) 0 hsl(var(--clr-#{$btn-shade}-7));
        border: solid 2px hsl(var(--clr-#{$btn-shade}-4));

        &:hover {
            color: hsl(var(--clr-on-#{$btn-shade}-2));
            box-shadow: 0 0 size(0) hsl(var(--clr-#{$btn-shade}-6));
            background-color: hsl(var(--clr-#{$btn-shade}-6));
        }
    }
}
